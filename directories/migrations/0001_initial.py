# Generated by Django 3.2.7 on 2021-09-24 09:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Directory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(help_text='Укажите UID справочника', max_length=50, unique=True, verbose_name='UID')),
                ('name', models.CharField(help_text='Укажите наименование справочника', max_length=200, unique=True, verbose_name='Наименование')),
                ('title', models.CharField(help_text='Укажите короткое наименование справочника', max_length=200, verbose_name='Краткое наименование справочника')),
                ('description', models.TextField(help_text='Укажите подробное описание справочника', verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Справочник',
                'verbose_name_plural': 'Справочники',
                'ordering': ('-uid',),
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(help_text='Укажите UID элемента справочника', max_length=100, verbose_name='UID')),
                ('code', models.CharField(help_text='Укажите код элемента справочника', max_length=50, verbose_name='Код элемента справочника')),
                ('value', models.CharField(help_text='Укажите значение элемента справочника', max_length=200, verbose_name='Значение элемента справочника')),
            ],
            options={
                'verbose_name': 'Элемент справочника',
                'verbose_name_plural': 'Элементы справочника',
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='ItemsVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itemsversion', to='directories.item', verbose_name='Элемент справочника')),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(help_text='Дата публикации справочника', verbose_name='Дата публикации справочника')),
                ('name', models.CharField(help_text='Укажите версию справочника', max_length=50, verbose_name='Версия справочника')),
                ('directory', models.ForeignKey(help_text='Справочник', on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='directories.directory', verbose_name='Выберите справочник')),
                ('items', models.ManyToManyField(help_text='Элементы справочника', related_name='versions', through='directories.ItemsVersion', to='directories.Item', verbose_name='Добавьте элементы справочника')),
            ],
            options={
                'verbose_name': 'Версия справочника',
                'verbose_name_plural': 'Версии справочника',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.AddField(
            model_name='itemsversion',
            name='version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itemsversion', to='directories.version', verbose_name='Версия справочника'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.UniqueConstraint(fields=('code', 'value'), name='code_value_constraint'),
        ),
        migrations.AddConstraint(
            model_name='version',
            constraint=models.UniqueConstraint(fields=('directory', 'name'), name='directory_name_constraint'),
        ),
    ]
